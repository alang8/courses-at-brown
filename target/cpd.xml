<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
   <duplication lines="23" tokens="173">
      <file line="41"
            path="/Users/filip/Desktop/CS/CS32/maps-1-2-ebussman-fkierzen/src/main/java/edu/brown/cs/ebussmanfkierzen/stars/CNeighbors.java"/>
      <file line="36"
            path="/Users/filip/Desktop/CS/CS32/maps-1-2-ebussman-fkierzen/src/main/java/edu/brown/cs/ebussmanfkierzen/stars/CNeighbors2.java"/>
      <codefragment><![CDATA[    if (!app.isDataLoaded()) {
      System.out.println("ERROR: no loaded data");
      results.add("ERROR: no loaded data");
      return results;
    } else if (!(inputs.length == 5 || inputs.length == 3)) {
      System.out.println("ERROR: incorrect number of arguments for naive_neighbors");
      results.add("ERROR: incorrect number of arguments for naive_neighbors");
      return results;
    } else if (Integer.parseInt(inputs[1]) < 0) {
      System.out.println("ERROR: neighbors must be non-negative");
      results.add("ERROR: neighbors must be non-negative");
      return results;
    }
    if (inputs.length == 5) {
      try {
        target.add(Double.parseDouble(inputs[2]));
        target.add(Double.parseDouble(inputs[3]));
        target.add(Double.parseDouble(inputs[4]));
      } catch (Exception e) {
        System.out.println("ERROR: coordinates must be numeric values");
        results.add("ERROR: coordinates must be numeric values");
        return results;
      }]]></codefragment>
   </duplication>
   <duplication lines="24" tokens="134">
      <file line="51"
            path="/Users/filip/Desktop/CS/CS32/maps-1-2-ebussman-fkierzen/src/main/java/edu/brown/cs/ebussmanfkierzen/stars/CNeighbors.java"/>
      <file line="48"
            path="/Users/filip/Desktop/CS/CS32/maps-1-2-ebussman-fkierzen/src/main/java/edu/brown/cs/ebussmanfkierzen/stars/CRadius.java"/>
      <codefragment><![CDATA[      results.add("ERROR: neighbors must be non-negative");
      return results;
    }
    if (inputs.length == 5) {
      try {
        target.add(Double.parseDouble(inputs[2]));
        target.add(Double.parseDouble(inputs[3]));
        target.add(Double.parseDouble(inputs[4]));
      } catch (Exception e) {
        System.out.println("ERROR: coordinates must be numeric values");
        results.add("ERROR: coordinates must be numeric values");
        return results;
      }
    } else {
      Coordinate coord = app.findTargetByName(inputs[2]);
      if (coord != null) {
        searchByName = true;
        target = coord.getCoords();
      } else {
        System.out.println("ERROR: cannot find this star by name");
        results.add("ERROR: cannot find this star by name");
        return results;
      }
    }]]></codefragment>
   </duplication>
</pmd-cpd>